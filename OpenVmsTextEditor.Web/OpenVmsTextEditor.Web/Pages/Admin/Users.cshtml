@page
@model OpenVmsTextEditor.Web.Pages.Admin.UsersModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Manage Users & Roles";
    Layout = "_Layout";
}

<div class="container py-4">
    <h2 class="mb-3">Manage Users & Roles</h2>
    

    <div class="table-responsive">
        <table class="table table-striped align-middle">
            <thead>
                <tr>
                    <th scope="col">Email</th>
                    <th scope="col">Username</th>
                    <th scope="col">Activated</th>
                    <th scope="col">Roles</th>
                    <th scope="col" class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var u in Model.Users)
            {
                var modalId = $"editRoles_{u.UserId}";
                var isSelf = string.Equals(Model.CurrentUserId, u.UserId, StringComparison.Ordinal);
                <tr>
                    <td>@u.Email</td>
                    <td>@u.UserName</td>
                    <td>
                        @if (u.IsActivated)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">No</span>
                        }
                    </td>
                    <td>
                        @if (u.Roles.Count == 0)
                        {
                            <span class="badge bg-secondary">None</span>
                        }
                        else
                        {
                            foreach (var r in u.Roles)
                            {
                                <span class="badge bg-primary me-1">@r</span>
                            }
                        }
                    </td>
                    <td class="text-end">
                        <div class="btn-group">
                            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#@modalId">
                                Edit Roles
                            </button>
                            <form method="post" asp-page-handler="Delete" class="ms-2 delete-user-form">
                                <input type="hidden" name="userId" value="@u.UserId" />
                                <button type="submit" class="btn btn-sm btn-outline-danger" data-email="@u.Email" @(isSelf ? "disabled" : null) title="@(isSelf ? "You cannot delete yourself" : "Delete user")">Delete</button>
                            </form>
                        </div>
                    </td>
                </tr>

                <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="@($"{modalId}_Label")" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="@($"{modalId}_Label")">Edit Roles - @u.Email</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form method="post" asp-page-handler="UpdateRoles">
                                <input type="hidden" name="userId" value="@u.UserId" />
                                <div class="modal-body">
                                    <div class="row g-2">
                                        @foreach (var role in Model.AllRoles)
                                        {
                                            var isChecked = u.Roles.Contains(role);
                                            var isAdminRole = string.Equals(role, "Admin", StringComparison.OrdinalIgnoreCase);
                                            var disableAdminForSelf = isSelf && isAdminRole;
                                            <div class="col-6">
                                                <div class="form-check">
                                                    <input class="form-check-input role-checkbox" data-modal-id="@modalId" type="checkbox" name="selectedRoles" value="@role" id="@($"{modalId}_{role}")" @(isChecked ? "checked" : null) @(disableAdminForSelf ? "disabled" : null) />
                                                    <label class="form-check-label" for="@($"{modalId}_{role}")" title="@(disableAdminForSelf ? "You cannot remove Admin from your own account" : null)">@role</label>
                                                    @* Preserve Admin selection for self since disabled inputs are not submitted *@
                                                    @if (disableAdminForSelf && isChecked)
                                                    {
                                                        <input type="hidden" name="selectedRoles" value="@role" />
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>

                                    <div class="mt-3 allowed-folders-container" id="@($"{modalId}_AllowedFolders")" style="display:none;">
                                        <label class="form-label">Allowed folders (one per line or comma-separated) for 'User' role only</label>
                                        <textarea class="form-control" name="allowedFolders" rows="4" placeholder="DISK1:[DIR]
DISK2:[HOME.USER]">@string.Join("\n", u.AllowedFolders)</textarea>
                                        <div class="form-text">Required when only 'User' role is selected.</div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="~/js/MakaroSoft.CommonNotification.js" asp-append-version="true"></script>
    <script src="~/js/MakaroSoft.CommonDialog.js" asp-append-version="true"></script>
    <script>
        const _notification = new MakaroSoft.CommonNotification();
        const _dialog = new MakaroSoft.CommonDialog({ required: true });
        function updateAllowedFoldersVisibility(modalId) {
            const container = document.getElementById(`${modalId}_AllowedFolders`);
            if (!container) return;
            const checkboxes = document.querySelectorAll(`#${modalId} input.role-checkbox`);
            let selected = [];
            checkboxes.forEach(cb => { if (cb.checked) selected.push(cb.value); });
            const userOnly = selected.length === 1 && selected[0].toLowerCase() === 'user';
            container.style.display = userOnly ? 'block' : 'none';
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Show TempData status message via notification
            const statusMessage = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(TempData["StatusMessage"]));
            if (statusMessage) {
                _notification.show(statusMessage, 'info', 4000);
            }

            document.querySelectorAll('form.delete-user-form button[type="submit"]').forEach(function (btn) {
                btn.addEventListener('click', function (e) {
                    if (btn.disabled) return;
                    e.preventDefault();
                    e.stopPropagation();
                    const form = btn.closest('form');
                    const email = btn.getAttribute('data-email') || '';
                    _dialog.show('Delete User', `Are you sure you want to delete ${email}?`, ['Delete', 'Cancel'], function (choice) {
                        _dialog.close();
                        if (choice === 'Delete') {
                            form.submit();
                        }
                    });
                });
            });

            // Initialize allowed folders visibility for each modal
            document.querySelectorAll('.modal').forEach(function (modal) {
                const modalId = modal.getAttribute('id');
                if (!modalId) return;
                updateAllowedFoldersVisibility(modalId);
                modal.querySelectorAll('input.role-checkbox').forEach(function (cb) {
                    cb.addEventListener('change', function () {
                        updateAllowedFoldersVisibility(modalId);
                    });
                });
            });
        });
    </script>
}
